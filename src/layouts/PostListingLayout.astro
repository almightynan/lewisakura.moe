---
import type { CollectionEntry } from "astro:content";
import Layout from "./Layout.astro";
import Tag from "../components/Tag.astro";

export interface Props {
	title: string;
	posts: CollectionEntry<"posts">[];
}

const { title, posts } = Astro.props;
---

<Layout title={title}>
	<h2>{title}</h2>
	{
		posts
			.sort(
				(a, b) =>
					(b.data.modifiedAt ?? b.data.createdAt).getTime() -
					(a.data.modifiedAt ?? a.data.createdAt).getTime()
			)
			.map(({ data, slug }) => (
				<article>
					<h3>
						<a href={`/posts/${slug}`}>{data.title}</a>
					</h3>
					<span class="date">
						<time datetime={data.createdAt.toISOString()}>
							{data.createdAt
								.toISOString()
								.replace(/T/, " ")
								.replace(/\..+/, "")}
						</time>
						{data.modifiedAt && (
							<>
								{" "}
								(updated{" "}
								<time datetime={data.modifiedAt.toISOString()}>
									{data.modifiedAt
										.toISOString()
										.replace(/T/, " ")
										.replace(/\..+/, "")}
								</time>
								)
							</>
						)}
					</span>
					<p>
						{data.description}{" "}
						<span class="tag-list">
							{data.tags.map((tag) => (
								<Tag tag={tag} />
							))}
						</span>
					</p>
				</article>
			))
	}
</Layout>

<style>
	.date {
		color: var(--subtext0);
	}

	.tag-list :global(.tag) {
		margin-right: 0.5rem;
	}
</style>
