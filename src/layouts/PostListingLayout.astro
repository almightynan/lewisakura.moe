---
import type { CollectionEntry } from "astro:content";

import dayjs from "../util/dayjs";

import Layout from "./Layout.astro";

import Tag from "../components/Tag.astro";

export interface Props {
	title: string;
	posts: CollectionEntry<"posts">[];
	description: string;
}

const { title, posts, description } = Astro.props;
---

<Layout title={title} description={description}>
	<h2>{title}</h2>
	{
		posts
			.sort(
				(a, b) =>
					(b.data.modifiedAt ?? b.data.createdAt).getTime() -
					(a.data.modifiedAt ?? a.data.createdAt).getTime()
			)
			.map(({ data, slug }) => (
				<article>
					<h3>
						<a href={`/posts/${slug}`}>{data.title}</a>
					</h3>
					<span class="date">
						{dayjs(data.createdAt).format("Do MMM, YYYY")}
						{data.modifiedAt && (
							<>
								(updated
								{dayjs(data.modifiedAt).format("Do MMM, YYYY")}
								{})
							</>
						)}
					</span>
					<p>
						{data.description}
						<span class="tag-list">
							{data.tags.map((tag: string) => (
								<Tag tag={tag} />
							))}
						</span>
					</p>
				</article>
			))
	}
</Layout>

<style lang="scss">
	.date {
		color: var(--subtext0);
	}

	.tag-list :global(.tag) {
		margin-right: 0.5rem;

		&:first-child {
			margin-left: 0.5rem;
		}
	}
</style>
